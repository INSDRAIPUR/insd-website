<!-- Video Modal -->
<div id="videoModal" class="review-popup">
    <div class="review-popup-content">
        <div class="video-container-portrait">
            <iframe id="modalVideo" src="" frameborder="0" style="max-width: 340px; width:100%; height:600px; object-fit:cover" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>
        <button class="close-popup" onclick=" closeVideoModal(); return false;">×</button>
    </div>
</div>

<!-- Review Popup -->
<div id="reviewPopup" class="review-popup">
    <div class="review-popup-content">
        <div class="review-popup-scroll">
            <p id="fullReviewText"></p>
        </div>
    </div>
    <button class="close-popup" onclick="event.preventDefault(); event.stopPropagation(); closeReviewPopup(); return false;">×</button>
</div>

<!-- Testimonial Section -->
<div id="clients_feedback" class="clients-feedback section panel overflow-hidden">
    <div class="section-outer panel">
        <div class="container max-w-lg">
            <div class="section-inner panel swiper-parent">
                <h2 class="h4 sm:h3 lg:h2 m-0 text-center">Real Stories . Real Impact</h2>
                <p style="font-size: 18px;" class="text-center mt-2 opacity-70"> Voices that reflect our impact.</p>
                <div class="panel padding-3 lg:p-6 bg-secondary dark:bg-gray-800 rounded-3 mt-4 sm:mt-6">
                    <div class="row child-cols-12 sm:child-cols-6 col-match g-3 lg:g-8">
                        <div>
                            <div class="panel rounded-2 overflow-hidden" style="height: 650px;">
                                <div class="swiper connect-image" style="height: 100% !important;" data-uc-swiper="items: 1; dots: .swiper-pagination; autoplay:5000; effect: fade; fade: true; allowTouchMove: false; disableOnInteraction: true;">
                                    <div class="swiper-wrapper" style="height: 100% !important;">
                                        <% testimonial.forEach((slide, index) => { 
                                            const hasVideo = slide.link && slide.link.includes('youtube.com/shorts');
                                            const videoId = hasVideo ? slide.link.match(/youtube\.com\/shorts\/([a-zA-Z0-9_-]+)/)[1] : null;
                                        %>
                                        <div class="swiper-slide">
                                            <% if (hasVideo) { %>
                                                <div class="video-container-portrait">
                                                    <iframe src="https://www.youtube.com/embed/<%= videoId %>?enablejsapi=1&autoplay=1&mute=1&loop=1&playlist=<%= videoId %>&modestbranding=1&showinfo=0&controls=0&disablekb=1&fs=0&rel=0" 
                                                            frameborder="0" 
                                                            style="scale:1.4; pointer-events: none;"
                                                            allow="accelerometer; encrypted-media; gyroscope"
                                                            allowfullscreen
                                                            id="video-<%= videoId %>"
                                                            class="youtube-video">
                                                    </iframe>
                                                    <button class="play-btn-overlay" data-video-id="<%= videoId %>" onclick="event.preventDefault(); event.stopPropagation(); openVideoModal('<%= videoId %>'); return false;">
                                                        <i class="fa-solid fa-volume-high"></i>
                                                    </button>
                                                </div>
                                            <% } else { %>
                                                <% if (slide.image) { %>
                                                    <figure class="featured-image m-0 rounded ratio ratio-3x4 overflow-hidden" style="scale:1.15;height: 100%;">
                                                        <img class="media-cover image" 
                                                             src="<%= process.env.S3_BASE_URL + slide.image %>" 
                                                             alt="<%= slide.name %>"
                                                             style="object-fit: cover; height: 100%; border-radius:24px; width: 100%;">
                                                    </figure>
                                                <% } else { %>
                                                    <div class="text-only-slide">
                                                        <p class="testimonial-text"><%= slide.review %></p>
                                                    </div>
                                                <% } %>
                                            <% } %>
                                        </div>
                                        <% }) %>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div>
                            <div class="panel">
                                <div class="swiper h-100 connect-text" data-uc-swiper="connect: .connect-image; autoplay:5000; items: 1; dots: .swiper-pagination; effect: fade; fade: true;">
                                    <div class="swiper-wrapper">
                                        <% testimonial.forEach((slide) => { 
                                            const displayText = slide.review.length > 450 ? 
                                                slide.review.slice(0, 450) + '...' : 
                                                slide.review;
                                        %>
                                        <div class="swiper-slide h-100">
                                            <div class="panel vstack justify-between items-center gap-2 lg:gap-4 h-100 text-center">
                                                <div class="panel">
                                                    <i style="color: #ac3948; height:48px; width:48px; font-size:48px" class="fa-solid fa-quote-left"></i>
                                                    <p class="fs-6 sm:fs-5 lg:fs-4 fw-bold mt-1 sm:mt-4 dark:text-white" style="padding: 12px;">
                                                        <%= displayText %>
                                                        <% if (slide.review.length > 450) { %>
                                                            <span class="read-more-btn" onclick="event.preventDefault(); event.stopPropagation(); openReviewPopup(`<%= slide.review.replace(/'/g, '\\\'').replace(/"/g, '"') %>`); return false;">
                                                                Read More
                                                            </span>
                                                        <% } %>
                                                    </p>
                                                </div>
                                                <div class="panel">
                                                    <div class="panel vstack items-center gap-narrow">
                                                        <h6 class="h5 m-0"><%= slide.name %></h6>
                                                        <span class="fs-6 opacity-70"><%= slide.companyProfile %></span>
                                                    </div>
                                                    <div class="panel mt-6">
                                                        <div class="swiper-pagination text-primary m-0 justify-center"></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <% }) %>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    h1,p {
        font-family: "graphik", sans-serif;
    }
    .review-popup {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        backdrop-filter: blur(10px);
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
    }
    .review-popup-scroll::-webkit-scrollbar {
        width: 8px;
    }
    .review-popup-scroll::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }
    .review-popup-scroll::-webkit-scrollbar-thumb {
        background: #888;
        border-radius: 10px;
    }
    .review-popup-scroll::-webkit-scrollbar-thumb:hover {
        background: #555;
    }
    .review-popup-content {
       
        border-radius: 12px;
        width: 340px;
        max-height: 600px;
        height: 100%;
        justify-content: center;
        display: flex;
        flex-direction: column;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
        transform: scale(0.8);
        transition: transform 0.3s ease-in-out;
        position: relative;
    }
    .review-popup-scroll {
        overflow-y: auto;
        max-height: calc(85vh - 80px);
        padding-right: 15px;
    }
    #fullReviewText {
        font-size: 25px;
        line-height: 38px;
        font-weight: 500;
        letter-spacing: -0.05em;
        margin: 0;
    }
    @media (max-width: 600px) {
        .review-popup-content {
            padding: 0;
            margin: 10px;
            width: 90%;
        }
        #fullReviewText {
            font-size: 18px;
            line-height: 28px;
        }
    }
    #reviewPopup .close-popup, #videoModal .close-popup {
        position: absolute;
        top: 20px;
        right: 20px;
        height: 40px;
        width: 40px;
        padding: 0;
        font-size: 24px;
        cursor: pointer;
        background: none;
        border: none;
        background-color: #76767691;
        color: white;
        font-weight: bold;
        z-index: 1001;
        border-radius: 50%;
    }
    #videoModal .close-popup:hover, #reviewPopup .close-popup:hover {
        background-color: #555;
    }
    .testimonial-text {
        color: #323232;
        font-size: 16px;
        font-weight: 500;
        line-height: 26px;
    }
    .read-more-btn {
        margin-top: 5px;
        background-color: transparent;
        color: #999999;
        font-size: 15px;
        font-style: italic;
        font-weight: 400;
        cursor: pointer;
        padding: 5px 8px 5px 0;
        border-radius: 4px;
    }
    .read-more-btn:hover {
        color: #666;
    }
    body.modal-open {
        overflow: hidden;
        position: fixed;
        width: 100%;
        height: 100%;
    }
    .review-popup.show {
        display: flex !important;
        opacity: 1;
    }
    .review-popup.show .review-popup-content {
        transform: scale(1);
    }
    .video-container-portrait {
        position: relative;
        width: 100%;
        height: 100vh;
        max-height: 600px;
        overflow: hidden;
        border-radius: 12px;
    }
    .video-container-portrait iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border: none;
        border-radius: 12px;
    }
    .play-btn-overlay {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(0, 0, 0, 0.7);
        color: white;
        border: none;
        border-radius: 50%;
        width: 80px;
        height: 80px;
        font-size: 32px;
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10;
        transition: all 0.2s ease;
    }
    .play-btn-overlay:hover {
        background: rgba(0, 0, 0, 0.9);
        transform: translate(-50%, -50%) scale(1.1);
    }
    .play-btn-overlay i {
        margin-left: 3px;
    }
    .padding-3 {
        padding: 1.5rem;
    }
    @media (max-width: 600px) {
        .padding-3 {
            padding: 0.8rem;
        }
        .play-btn-overlay {
            width: 60px;
            height: 60px;
            font-size: 24px;
        }
    }
</style>

<script>
    let videoPlayers = {};
    let swiperInstances = {};
    let currentActiveSlide = 0;
    let isYouTubeAPIReady = false;
    let scrollPosition = 0; // Store scroll position

    function onYouTubeIframeAPIReady() {
        console.log('YouTube API is ready');
        isYouTubeAPIReady = true;
        
        // Initialize YouTube players for carousel videos
        document.querySelectorAll('.youtube-video').forEach(iframe => {
            const videoId = iframe.id.replace('video-', '');
            console.log('Initializing YouTube player for video ID:', videoId);
            
            try {
                videoPlayers[videoId] = new YT.Player(iframe.id, {
                    events: {
                        'onReady': onPlayerReady,
                        'onStateChange': onPlayerStateChange
                    }
                });
            } catch (error) {
                console.error('Error initializing YouTube player:', error);
            }
        });

        initializeSwipers();
    }

    function initializeSwipers() {
        // Initialize swiper instances
        const imageSwiper = new Swiper('.connect-image', {
            effect: 'fade',
            fadeEffect: {
                crossFade: true
            },
            allowTouchMove: false,
            autoHeight: true,
            autoplay: {
                delay: 5000,
                disableOnInteraction: false,
            },
            on: {
                slideChange: function(swiper) {
                    currentActiveSlide = swiper.activeIndex;
                    console.log('Slide changed to index:', currentActiveSlide);
                    
                    // Pause all videos first
                    Object.values(videoPlayers).forEach(player => {
                        try {
                            if (player && player.pauseVideo) {
                                player.pauseVideo();
                            }
                        } catch (error) {
                            console.error('Error pausing video:', error);
                        }
                    });
                    
                    // Play the video in the new slide if it exists
                    setTimeout(() => {
                        const activeSlide = swiper.slides[swiper.activeIndex];
                        const iframe = activeSlide.querySelector('iframe.youtube-video');
                        if (iframe) {
                            const videoId = iframe.id.replace('video-', '');
                            if (videoPlayers[videoId]) {
                                console.log('Playing video:', videoId);
                                try {
                                    videoPlayers[videoId].playVideo();
                                } catch (error) {
                                    console.error('Error playing video:', error);
                                }
                            }
                        }
                    }, 100);
                }
            }
        });

        const textSwiper = new Swiper('.connect-text', {
            effect: 'fade',
            fadeEffect: {
                crossFade: true
            },
            autoHeight: true,
            autoplay: {
                delay: 5000,
                disableOnInteraction: false,
            }
        });

        // Connect the two swipers
        imageSwiper.controller.control = textSwiper;
        textSwiper.controller.control = imageSwiper;

        swiperInstances.image = imageSwiper;
        swiperInstances.text = textSwiper;
    }

    function onPlayerReady(event) {
        console.log('Player ready for video ID:', event.target.getVideoData().video_id);
        // Autoplay muted video
        try {
            event.target.mute();
            event.target.playVideo();
        } catch (error) {
            console.error('Error in onPlayerReady:', error);
        }
    }

    function onPlayerStateChange(event) {
        if (event.data === YT.PlayerState.ENDED) {
            console.log('Video ended, replaying:', event.target.getVideoData().video_id);
            try {
                // Replay the video to create a seamless loop
                event.target.seekTo(0);
                event.target.playVideo();
            } catch (error) {
                console.error('Error replaying video:', error);
            }
        }
    }

    function openVideoModal(videoId) {
        console.log('Opening modal for video ID:', videoId);
        
        if (!videoId) {
            console.error('No video ID provided');
            return false;
        }

        // Store current scroll position
        scrollPosition = window.pageYOffset || document.documentElement.scrollTop;

        const modal = document.getElementById('videoModal');
        const iframe = document.getElementById('modalVideo');
        
        if (!modal || !iframe) {
            console.error('Modal or iframe not found in DOM');
            return false;
        }

        // Set the iframe source with unmuted video
        iframe.src = `https://www.youtube.com/embed/${videoId}?enablejsapi=1&autoplay=1&mute=0&modestbranding=1&showinfo=0&controls=1&rel=0`;
        
        // Show modal
        modal.style.display = 'flex';
        setTimeout(() => {
            modal.classList.add('show');
            console.log('Modal should be visible now');
        }, 10);
        
        document.body.classList.add('modal-open');
        // Set body top position to maintain scroll position
        document.body.style.top = `-${scrollPosition}px`;

        // Pause the carousel video
        if (videoPlayers[videoId]) {
            console.log('Pausing carousel video:', videoId);
            try {
                videoPlayers[videoId].pauseVideo();
            } catch (error) {
                console.error('Error pausing carousel video:', error);
            }
        }

        // Pause swiper autoplay
        if (swiperInstances.image) {
            swiperInstances.image.autoplay.stop();
        }
        if (swiperInstances.text) {
            swiperInstances.text.autoplay.stop();
        }

        return false;
    }

    function closeVideoModal() {
        console.log('Closing video modal');
        const modal = document.getElementById('videoModal');
        const iframe = document.getElementById('modalVideo');
        
        if (!modal || !iframe) {
            console.error('Modal or iframe not found');
            return false;
        }

        modal.classList.remove('show');
        setTimeout(() => {
            modal.style.display = 'none';
            iframe.src = ''; // Stop the video
            console.log('Modal hidden, iframe src cleared');
        }, 300);
        
        // Remove modal-open class and restore scroll position
        document.body.classList.remove('modal-open');
        document.body.style.top = '';
        window.scrollTo(0, scrollPosition);

        // Resume the carousel video for the current slide
        setTimeout(() => {
            if (swiperInstances.image && swiperInstances.image.slides) {
                const activeSlide = swiperInstances.image.slides[currentActiveSlide];
                const activeIframe = activeSlide ? activeSlide.querySelector('iframe.youtube-video') : null;
                
                if (activeIframe) {
                    const videoId = activeIframe.id.replace('video-', '');
                    if (videoPlayers[videoId]) {
                        console.log('Resuming carousel video:', videoId);
                        try {
                            videoPlayers[videoId].playVideo();
                        } catch (error) {
                            console.error('Error resuming carousel video:', error);
                        }
                    }
                }
            }

            // Resume swiper autoplay
            if (swiperInstances.image) {
                swiperInstances.image.autoplay.start();
            }
            if (swiperInstances.text) {
                swiperInstances.text.autoplay.start();
            }
        }, 100);

        return false;
    }

    // Load YouTube API
    if (!window.YT) {
        const tag = document.createElement('script');
        tag.src = "https://www.youtube.com/iframe_api";
        const firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    } else if (window.YT.Player) {
        onYouTubeIframeAPIReady();
    }

    // Review Popup Functions
    function openReviewPopup(reviewText) {
        console.log('Opening review popup');
        
        // Store current scroll position
        scrollPosition = window.pageYOffset || document.documentElement.scrollTop;
        
        const fullReviewElement = document.getElementById("fullReviewText");
        const popup = document.getElementById("reviewPopup");
        
        if (!fullReviewElement || !popup) {
            console.error('Review popup elements not found');
            return false;
        }

        fullReviewElement.innerText = reviewText;
        popup.style.display = "flex";
        setTimeout(() => popup.classList.add("show"), 10);
        
        document.body.classList.add("modal-open");
        // Set body top position to maintain scroll position
        document.body.style.top = `-${scrollPosition}px`;

        return false;
    }

    function closeReviewPopup() {
        console.log('Closing review popup');
        const popup = document.getElementById("reviewPopup");
        
        if (!popup) {
            console.error('Review popup not found');
            return false;
        }

        popup.classList.remove("show");
        setTimeout(() => {
            popup.style.display = "none";
        }, 300);
        
        // Remove modal-open class and restore scroll position
        document.body.classList.remove('modal-open');
        document.body.style.top = '';
        window.scrollTo(0, scrollPosition);
        
        return false;
    }

    // Close modals when clicking outside content
    document.addEventListener('DOMContentLoaded', function() {
        const reviewPopup = document.getElementById("reviewPopup");
        const videoModal = document.getElementById("videoModal");

        if (reviewPopup) {
            reviewPopup.addEventListener("click", function(event) {
                if (event.target === this) {
                    event.preventDefault();
                    event.stopPropagation();
                    closeReviewPopup();
                    return false;
                }
            });
        }

        if (videoModal) {
            videoModal.addEventListener("click", function(event) {
                if (event.target === this) {
                    event.preventDefault();
                    event.stopPropagation();
                    closeVideoModal();
                    return false;
                }
            });
        }
    });

    // Handle escape key to close modals
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            const videoModal = document.getElementById('videoModal');
            const reviewPopup = document.getElementById('reviewPopup');
            
            if (videoModal && videoModal.classList.contains('show')) {
                event.preventDefault();
                event.stopPropagation();
                closeVideoModal();
            } else if (reviewPopup && reviewPopup.classList.contains('show')) {
                event.preventDefault();
                event.stopPropagation();
                closeReviewPopup();
            }
        }
    });
</script>